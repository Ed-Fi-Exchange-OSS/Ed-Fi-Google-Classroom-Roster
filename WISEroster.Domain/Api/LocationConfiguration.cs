// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.8
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace WISEroster.Domain.Api
{

    // Location
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public partial class LocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Location>
    {
        public LocationConfiguration()
            : this("edfi")
        {
        }

        public LocationConfiguration(string schema)
        {
            ToTable("Location", schema);
            HasKey(x => new { x.ClassroomIdentificationCode, x.SchoolId });

            Property(x => x.ClassroomIdentificationCode).HasColumnName(@"ClassroomIdentificationCode").HasColumnType("nvarchar").IsRequired().HasMaxLength(60).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SchoolId).HasColumnName(@"SchoolId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MaximumNumberOfSeats).HasColumnName(@"MaximumNumberOfSeats").HasColumnType("int").IsOptional();
            Property(x => x.OptimalNumberOfSeats).HasColumnName(@"OptimalNumberOfSeats").HasColumnType("int").IsOptional();
            Property(x => x.Discriminator).HasColumnName(@"Discriminator").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.LastModifiedDate).HasColumnName(@"LastModifiedDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.ChangeVersion).HasColumnName(@"ChangeVersion").HasColumnType("bigint").IsRequired();

            // Foreign keys
            HasRequired(a => a.School).WithMany(b => b.Locations).HasForeignKey(c => c.SchoolId).WillCascadeOnDelete(false); // FK_Location_School
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
