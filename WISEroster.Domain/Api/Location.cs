// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.8
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace WISEroster.Domain.Api
{

    // Location
    ///<summary>
    /// This entity represents the physical space where students gather for a particular class/section. The Location may be an indoor or outdoor area designated for the purpose of meeting the educational needs of students.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public partial class Location
    {

        ///<summary>
        /// A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.
        ///</summary>
        public string ClassroomIdentificationCode { get; set; } // ClassroomIdentificationCode (Primary key) (length: 60)

        ///<summary>
        /// The identifier assigned to a school.
        ///</summary>
        public int SchoolId { get; set; } // SchoolId (Primary key)

        ///<summary>
        /// The most number of seats the class can maintain.
        ///</summary>
        public int? MaximumNumberOfSeats { get; set; } // MaximumNumberOfSeats

        ///<summary>
        /// The number of seats that is most favorable to the class.
        ///</summary>
        public int? OptimalNumberOfSeats { get; set; } // OptimalNumberOfSeats
        public string Discriminator { get; set; } // Discriminator (length: 128)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public System.DateTime LastModifiedDate { get; set; } // LastModifiedDate
        public System.Guid Id { get; set; } // Id
        public long ChangeVersion { get; set; } // ChangeVersion

        // Reverse navigation

        /// <summary>
        /// Child Sections where [Section].([LocationClassroomIdentificationCode], [LocationSchoolId]) point to this entity (FK_Section_Location)
        /// </summary>
        public System.Collections.Generic.ICollection<Section> Sections { get; set; } // Section.FK_Section_Location

        // Foreign keys

        /// <summary>
        /// Parent School pointed by [Location].([SchoolId]) (FK_Location_School)
        /// </summary>
        public School School { get; set; } // FK_Location_School

        public Location()
        {
            CreateDate = System.DateTime.Now;
            LastModifiedDate = System.DateTime.Now;
            Id = System.Guid.NewGuid();
            Sections = new System.Collections.Generic.List<Section>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
