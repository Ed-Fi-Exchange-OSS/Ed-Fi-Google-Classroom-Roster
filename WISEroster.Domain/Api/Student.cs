// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.8
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace WISEroster.Domain.Api
{

    // Student
    ///<summary>
    /// This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public partial class Student
    {

        ///<summary>
        /// A unique alphanumeric code assigned to a student.
        ///</summary>
        public int StudentUsi { get; set; } // StudentUSI (Primary key)

        ///<summary>
        /// A prefix used to denote the title, degree, position, or seniority of the person.
        ///</summary>
        public string PersonalTitlePrefix { get; set; } // PersonalTitlePrefix (length: 30)

        ///<summary>
        /// A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.
        ///</summary>
        public string FirstName { get; set; } // FirstName (length: 75)

        ///<summary>
        /// A secondary name given to an individual at birth, baptism, or during another naming ceremony.
        ///</summary>
        public string MiddleName { get; set; } // MiddleName (length: 75)

        ///<summary>
        /// The name borne in common by members of a family.
        ///</summary>
        public string LastSurname { get; set; } // LastSurname (length: 75)

        ///<summary>
        /// An appendage, if any, used to denote an individual&apos;s generation in his family (e.g., Jr., Sr., III).
        ///</summary>
        public string GenerationCodeSuffix { get; set; } // GenerationCodeSuffix (length: 10)

        ///<summary>
        /// The person&apos;s maiden name.
        ///</summary>
        public string MaidenName { get; set; } // MaidenName (length: 75)

        ///<summary>
        /// The month, day, and year on which an individual was born.
        ///</summary>
        public System.DateTime BirthDate { get; set; } // BirthDate

        ///<summary>
        /// The city the student was born in.
        ///</summary>
        public string BirthCity { get; set; } // BirthCity (length: 30)

        ///<summary>
        /// The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.
        ///</summary>
        public int? BirthStateAbbreviationDescriptorId { get; set; } // BirthStateAbbreviationDescriptorId

        ///<summary>
        /// For students born outside of the U.S., the Province or jurisdiction in which an individual is born.
        ///</summary>
        public string BirthInternationalProvince { get; set; } // BirthInternationalProvince (length: 150)

        ///<summary>
        /// The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.
        ///</summary>
        public int? BirthCountryDescriptorId { get; set; } // BirthCountryDescriptorId

        ///<summary>
        /// For students born outside of the U.S., the date the student entered the U.S.
        ///</summary>
        public System.DateTime? DateEnteredUS { get; set; } // DateEnteredUS

        ///<summary>
        /// Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)
        ///</summary>
        public bool? MultipleBirthStatus { get; set; } // MultipleBirthStatus

        ///<summary>
        /// A person&apos;s gender at birth.
        ///</summary>
        public int? BirthSexDescriptorId { get; set; } // BirthSexDescriptorId

        ///<summary>
        /// An indicator of whether or not the person is a U.S. citizen.
        ///</summary>
        public int? CitizenshipStatusDescriptorId { get; set; } // CitizenshipStatusDescriptorId

        ///<summary>
        /// A unique alphanumeric code assigned to a student.
        ///</summary>
        public string StudentUniqueId { get; set; } // StudentUniqueId (length: 32)
        public string Discriminator { get; set; } // Discriminator (length: 128)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public System.DateTime LastModifiedDate { get; set; } // LastModifiedDate
        public System.Guid Id { get; set; } // Id
        public long ChangeVersion { get; set; } // ChangeVersion

        // Reverse navigation

        /// <summary>
        /// Child StudentEducationOrganizationAssociations where [StudentEducationOrganizationAssociation].[StudentUSI] point to this entity (FK_StudentEducationOrganizationAssociation_Student)
        /// </summary>
        public System.Collections.Generic.ICollection<StudentEducationOrganizationAssociation> StudentEducationOrganizationAssociations { get; set; } // StudentEducationOrganizationAssociation.FK_StudentEducationOrganizationAssociation_Student
        /// <summary>
        /// Child StudentSchoolAssociations where [StudentSchoolAssociation].[StudentUSI] point to this entity (FK_StudentSchoolAssociation_Student)
        /// </summary>
        public System.Collections.Generic.ICollection<StudentSchoolAssociation> StudentSchoolAssociations { get; set; } // StudentSchoolAssociation.FK_StudentSchoolAssociation_Student
        /// <summary>
        /// Child StudentSectionAssociations where [StudentSectionAssociation].[StudentUSI] point to this entity (FK_StudentSectionAssociation_Student)
        /// </summary>
        public System.Collections.Generic.ICollection<StudentSectionAssociation> StudentSectionAssociations { get; set; } // StudentSectionAssociation.FK_StudentSectionAssociation_Student

        public Student()
        {
            CreateDate = System.DateTime.Now;
            LastModifiedDate = System.DateTime.Now;
            Id = System.Guid.NewGuid();
            StudentEducationOrganizationAssociations = new System.Collections.Generic.List<StudentEducationOrganizationAssociation>();
            StudentSchoolAssociations = new System.Collections.Generic.List<StudentSchoolAssociation>();
            StudentSectionAssociations = new System.Collections.Generic.List<StudentSectionAssociation>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
