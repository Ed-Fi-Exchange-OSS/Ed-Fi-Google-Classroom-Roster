// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.8
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace WISEroster.Domain.Api
{

    // StudentSchoolAssociation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public partial class StudentSchoolAssociationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StudentSchoolAssociation>
    {
        public StudentSchoolAssociationConfiguration()
            : this("edfi")
        {
        }

        public StudentSchoolAssociationConfiguration(string schema)
        {
            ToTable("StudentSchoolAssociation", schema);
            HasKey(x => new { x.EntryDate, x.SchoolId, x.StudentUsi });

            Property(x => x.EntryDate).HasColumnName(@"EntryDate").HasColumnType("date").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SchoolId).HasColumnName(@"SchoolId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StudentUsi).HasColumnName(@"StudentUSI").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PrimarySchool).HasColumnName(@"PrimarySchool").HasColumnType("bit").IsOptional();
            Property(x => x.EntryGradeLevelDescriptorId).HasColumnName(@"EntryGradeLevelDescriptorId").HasColumnType("int").IsRequired();
            Property(x => x.EntryGradeLevelReasonDescriptorId).HasColumnName(@"EntryGradeLevelReasonDescriptorId").HasColumnType("int").IsOptional();
            Property(x => x.EntryTypeDescriptorId).HasColumnName(@"EntryTypeDescriptorId").HasColumnType("int").IsOptional();
            Property(x => x.RepeatGradeIndicator).HasColumnName(@"RepeatGradeIndicator").HasColumnType("bit").IsOptional();
            Property(x => x.ClassOfSchoolYear).HasColumnName(@"ClassOfSchoolYear").HasColumnType("smallint").IsOptional();
            Property(x => x.SchoolChoiceTransfer).HasColumnName(@"SchoolChoiceTransfer").HasColumnType("bit").IsOptional();
            Property(x => x.ExitWithdrawDate).HasColumnName(@"ExitWithdrawDate").HasColumnType("date").IsOptional();
            Property(x => x.ExitWithdrawTypeDescriptorId).HasColumnName(@"ExitWithdrawTypeDescriptorId").HasColumnType("int").IsOptional();
            Property(x => x.ResidencyStatusDescriptorId).HasColumnName(@"ResidencyStatusDescriptorId").HasColumnType("int").IsOptional();
            Property(x => x.GraduationPlanTypeDescriptorId).HasColumnName(@"GraduationPlanTypeDescriptorId").HasColumnType("int").IsOptional();
            Property(x => x.EducationOrganizationId).HasColumnName(@"EducationOrganizationId").HasColumnType("int").IsOptional();
            Property(x => x.GraduationSchoolYear).HasColumnName(@"GraduationSchoolYear").HasColumnType("smallint").IsOptional();
            Property(x => x.EmployedWhileEnrolled).HasColumnName(@"EmployedWhileEnrolled").HasColumnType("bit").IsOptional();
            Property(x => x.CalendarCode).HasColumnName(@"CalendarCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(60);
            Property(x => x.SchoolYear).HasColumnName(@"SchoolYear").HasColumnType("smallint").IsOptional();
            Property(x => x.FullTimeEquivalency).HasColumnName(@"FullTimeEquivalency").HasColumnType("decimal").IsOptional().HasPrecision(3,2);
            Property(x => x.TermCompletionIndicator).HasColumnName(@"TermCompletionIndicator").HasColumnType("bit").IsOptional();
            Property(x => x.Discriminator).HasColumnName(@"Discriminator").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.LastModifiedDate).HasColumnName(@"LastModifiedDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.ChangeVersion).HasColumnName(@"ChangeVersion").HasColumnType("bigint").IsRequired();

            // Foreign keys
            HasOptional(a => a.EntryGradeLevelReasonDescriptor).WithMany(b => b.StudentSchoolAssociations).HasForeignKey(c => c.EntryGradeLevelReasonDescriptorId).WillCascadeOnDelete(false); // FK_StudentSchoolAssociation_EntryGradeLevelReasonDescriptor
            HasRequired(a => a.GradeLevelDescriptor).WithMany(b => b.StudentSchoolAssociations).HasForeignKey(c => c.EntryGradeLevelDescriptorId).WillCascadeOnDelete(false); // FK_StudentSchoolAssociation_GradeLevelDescriptor
            HasRequired(a => a.School).WithMany(b => b.StudentSchoolAssociations).HasForeignKey(c => c.SchoolId).WillCascadeOnDelete(false); // FK_StudentSchoolAssociation_School
            HasRequired(a => a.Student).WithMany(b => b.StudentSchoolAssociations).HasForeignKey(c => c.StudentUsi).WillCascadeOnDelete(false); // FK_StudentSchoolAssociation_Student
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
